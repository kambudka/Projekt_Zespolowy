
@{
    ViewBag.Title = "Index";
}



@section Scripts{

    <script>

        $(document).ready(function () {

            var events = [];
            var selectedEvent = null;
            var g_BusinessHours = [];
            var court;
            FetchBusinessHours();
         //   ShowHours();
            Setnumber();
            GenerateCalender();
            //FetchEventAndRenderCalendar();

           // function ShowHours() {
           //     window.alert("Pokazuje");
           //     $.each(g_BusinessHours, function (index, value) {
           //         window.alert(index + ":" + value.daynumber +":" + value.start.Hours);
           //     })
            // }
            function Setnumber(){
                court = 1;
            }

            function FetchBusinessHours() {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetHours", "Calendar")',
                    success: function (data) {
                        $.each(data, function (i, v) {
                            g_BusinessHours.push({
                                daynumber: v.DayOfWeek,
                                start: v.TimeFrom,
                                end: v.TimeTo
                            });
                        })
                   //     window.alert("Pomyślnie pobrano godziny");
                    },
                    error: function (error) {
                        alert('Nie udało się pobrać godzin otwarcia');
                    }
                })
            }

            function FetchEventAndRenderCalendar() {
                events = [];
                $.ajax({
                    type: "GET",
                    url: "/Calendar/GetEvents",
                    success: function (data) {
                        //Refresh the calender
                        g_BusinessHours = data;

                        GenerateCalender();
                    },
                    error: function (error) {
                        alert('failed');
                    }
                })
            }

          

            function Refech() {
                $('#calendar').fullCalendar('destroy');
                $('#calender').fullCalendar('refetchEvents');
                $('#calender').fullCalendar('rerenderEvents');
                GenerateCalender();
               // GenerateCalender()
            }

            function GenerateCalender() {
                $('#calender').fullCalendar('destroy');
                $('#calendar').fullCalendar({
                    customButtons: {
                        addcourt: {
                            text: 'Nastepny',
                            click: function () {
                                if (court != 2)
                                    court = court + 1;
                                Refech();
                            }
                        },
                        subcourt: {
                            text: 'Poprzedni',
                            click: function () {
                                if (court > 1)
                                    court = court - 1;
                                Refech();
                            }
                        },
                        courtnumber: {
                            text: court,
                            click: function () {
                            }
                        },
                        cyclic: {
                            text: 'Rezerwacja cykliczna',
                            click: function () {
                                location.href = "CyclicReservations/Index";
                            }
                        },
                    },
                   
                    header: {
                        left: 'prev,next today subcourt courtnumber addcourt cyclic',
                        center: 'title',
                        right: 'month,agendaWeek'
                    },
                    aspectRatio: 2,
                    timeFormat: 'H(:mm)',
                    businessHours:
                        [ // specify an array instead
                        //{
                        //    dow: [0], // Niedziela
                        //    start: '12:00', // 8am
                        //    end: '15:00' // 6pm
                        //},
                        //{
                        //    dow: [1], // Poniedziałek
                        //    start: '10:00', // 10am
                        //    end: '18:00' // 4pm
                        //},
                        {
                            dow: [2], // Wtorek
                            start: '10:00', // 10am
                            end: '20:00' // 4pm
                        },
                        {
                            dow: [3], // Sroda
                            start: '06:00', // 10am
                            end: '18:00' // 4pm
                        },
                        {
                            dow: [4], // Czwartek
                            start: '08:00', // 10am
                            end: '22:00' // 4pm
                        },
                        {
                            dow: [5], // Piątek
                            start: '09:00', // 10am
                            end: '23:00' // 4pm
                        },
                       // {
                        //    dow: [6], //  Sobota
                        //    start: '09:00',
                        //    end: '23:00'
                       // },
                    ],
                    selectConstraint: "businessHours",
                    defaultDate: $('#calendar').fullCalendar('today'),
                    slotLabelFormat: ['H:mm'],
                    minTime: "06:00:00",
                    maxTime: "23:00:00",
                    dayClick: function (date, jsEvent, view) {
                        var view2 = $('#calendar').fullCalendar('getView');
                        if (view2.name == "month") {
                            $(this).css('background-color', 'red');
                            $('#calendar').fullCalendar('changeView', 'agendaWeek');
                            $("#calendar").fullCalendar('gotoDate', date);

                        }
                    },

                    navLinks: true, // can click day/week names to navigate views
                    selectable: true,
                    selectHelper: true,
                    eventOverlap: false,
                    selectOverlap: false,
                    timeZone: 'local',
                    eventClick: function (calEvent, jsEvent, view) {
                        var view2 = $('#calendar').fullCalendar('getView');
                        if (view2.name == "agendaWeek" ){
                            selectedEvent = calEvent;
                            $('#infoModal #eventTitle').text(calEvent.title);
                            var $description = $('<div/>');
                            $description.append($('<p/>').html('<b>Start:</b>' + calEvent.start.format("DD-MMM-YYYY HH:mm:ss")));
                            if (calEvent.end != null) {
                                $description.append($('<p/>').html('<b>End:</b>' + calEvent.end.format("DD-MMM-YYYY HH:mm:ss")));
                            }
                            $description.append($('<p/>').html('<b>Description:</b>' + calEvent.description));
                            $description.append($('<p/>').html('<b>ID:</b>' + calEvent.id));
                            $('#infoModal #pDetails').empty().html($description);
                            $('#infoModal').modal();
                }
                    },
                    select: function (start, end) {
                        selectedEvent = {
                            eventID: 0,
                            title: ' ',
                            description: 'Twoj opis',
                            start: start,
                            end: end,

                        };
                        var view2 = $('#calendar').fullCalendar('getView');
                        if (view2.name == "agendaWeek") {
                            openAddEditForm();

                        }
                        $('#calendar').fullCalendar('unselect');
                    },

                    editable: true,
                    eventLimit: true, // allow "more" link when too many events

                    eventRender: function (event, element, view) {
                        if (view.type == 'month') {
                            $(element).css("display", "none");
                        } else {
                            // Do nothing
                        }
                    },



                    //pobieranie wyświetlanych eventów
                    events: {
                        url: '/Calendar/GetEvents/',
                        data: function () { // a function that returns an object
                            return {
                                court
                            };
                        },
                        error: function () {
                            $('#script-warning').show();
                        },
                    },                    //Wygląd dni w monthview
                    dayRender: function (date, cell) {
                        var color;
                        var string = date.toString();
                        cell.css("background-color", "#gray");
                        if(date.isAfter())
                         $.ajax({
                            type: "GET",
                            data: { 'courtid': court, 'datejs': string },
                            url: '@Url.Action("GetColor", "Calendar")',
                            success: function (data) {
                                color = data;
                                switch (color) {
                                            case 0:
                                                cell.css("background-color", "#7FFFD4");
                                                break;
                                            case 1:
                                                cell.css("background-color", "#DC143C");
                                                break;
                                            case 2:
                                                cell.css("background-color", "#FF8C00");
                                                break;
                                            case 3:
                                                cell.css("background-color", "#87CEFA");
                                                break;
                                            case 4:
                                                cell.css("background-color", "gray");
                                                break;
                                            default:
                                                cell.css("background-color", "gray");
                                };
                                var fcEl = $('#calendar');
                                    view = fcEl.fullCalendar('getView');
                                view.unrenderDates();
                                view.renderDates();
                                fcEl.fullCalendar('refetchEvents');

                            },
                            error: function (error) {
                                alert('Nie udalo się pobrac dostepnosci dnia');
                            }
                        });

                    },
                });
            }

            function openAddEditForm() {
                if (selectedEvent != null) {
                    $('#hdEventID').val(selectedEvent.eventID);
                    $('#hdstart').val(selectedEvent.start);
                    $('#hdend').val(selectedEvent.end);
                    $('#txtSubject').val(selectedEvent.title);
                    $('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                    $('#chkIsFullDay').change();
                    $('#txtDescription').val(selectedEvent.description);
                    var $description = $('<div/>');
                    $description.append($('<p/>').html('<b>Start:</b>' + selectedEvent.start.format("DD-MMM-YYYY HH:mm:ss")));
                    if (selectedEvent.end != null) {
                        $description.append($('<p/>').html('<b>End:</b>' + selectedEvent.end.format("DD-MMM-YYYY HH:mm:ss")));
                    }
                    $description.append($('<p/>').html('<b>Description:</b>' + selectedEvent.description));
                    $('#myModalSave #pDetails').empty().html($description);
                } else {

                    var title = prompt('Event Titleerror:');
                }

                $('#infoModal').modal('hide');
                $('#myModalSave').modal();
            }

            $('#btnDelete').click(function () {
                if (selectedEvent != null && confirm('Are you sure?')) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("DeleteEvent", "Calendar")',
                        data: { 'eventID': selectedEvent.id },
                        success: function (data) {
                            if (data.status) {
                                //Refresh the calender
                                $('#infoModal').modal('hide');
                                window.alert("Pomyślnie usunięto rezerwacje");
                                GenerateCalender();

                            }
                        },
                        error: function () {
                            window.alert("Nieudało się dodać rezerwacji");
                        }
                    })
                }
            });

            $('#btnSave').click(function () {
                //Validation/
                //if ($('#txtSubject').val().trim() == "") {
                //   alert('Subject required');
                //   return;
                //}
                var data = null;
                data = {
                    id: $('#hdEventID').val(),
                    start: $('#hdstart').val(),
                    end: $('#hdend').val(),
                    description: $('#txtDescription').val(),
                }
                SaveEvent(data);
                // call function for submit data to the server
            });

            function SaveEvent(data) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveEvent", "Calendar")',
                    data: { 'e': data, 'court': court },
                    success: function (data) {
                        if (data.status) {
                            //Refresh the calender
                            //FetchEventAndRenderCalendar();
                            $('#myModalSave').modal('hide');
                            window.alert("Pomyślnie dodano");
                            $('#calendar').fullCalendar('renderEvent', selectedEvent, true);

                            GenerateCalender();

                        }
                        if (!data.status) {

                            window.alert("Nie udało się dodac");
                            $('#myModalSave').modal('hide');
                        }
                    },
                    error: function () {
                        confirm('Are you sure?')
                        $('#myModalSave').modal('hide');
                    }
                })
            }
        });



    </script>
}

<div id="calendar"></div>

<div id="myModalSave" class="modal fade" role="dialog">
    @if (Request.IsAuthenticated)
    {
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Save Event</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal">
                        <input type="hidden" id="hdEventID" value="0" />
                        <input type="hidden" id="hdstart" class="form-control" />
                        <input type="hidden" id="hdend" class="form-control" />
                        <p id="pDetails"></p>
                        <button type="button" id="btnSave" class="btn btn-success">Save</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </form>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Musisz być zalogowany aby dodawać rezerwacje</h4>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }

</div>

<div id="infoModal" class="modal fade" role="dialog">

    @if (Request.IsAuthenticated)
    {
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"><span id="eventTitle"></span></h4>
                </div>
                <div class="modal-body">
                    <p id="pDetails"></p>
                    <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                        <span class="glyphicon glyphicon-remove"></span> Remove
                    </button>
                    <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                        <span class="glyphicon glyphicon-pencil"></span> Edit
                    </button>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Musisz być zalogowany aby zobaczyć szczegóły</h4>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>


